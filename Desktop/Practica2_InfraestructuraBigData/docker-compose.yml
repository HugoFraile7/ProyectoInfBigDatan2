version: '3.8'

services:
  # MinIO - S3 Compatible Object Storage
  minio:
    image: minio/minio:RELEASE.2023-03-20T20-16-18Z
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    networks:
      - datalake-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  mc-init:
    image: minio/mc
    depends_on:
      - minio
    restart: on-failure
    entrypoint: >
      /bin/sh -c "
      until /usr/bin/mc config host add minio http://minio:9000 minioadmin minioadmin; do
        echo 'Waiting for MinIO to be ready...';
        sleep 1;
      done;
      /usr/bin/mc mb minio/raw-ingestion-zone || true;
      /usr/bin/mc mb minio/clean-zone || true;
      /usr/bin/mc mb minio/access-zone || true;
      /usr/bin/mc mb minio/govern-zone-metadata || true;
      echo 'MinIO buckets created successfully';
      exit 0;"
    networks:
      - datalake-network

  mariadb:
    image: mariadb:10.11
    container_name: mariadb
    environment:
      MYSQL_ROOT_PASSWORD: rootpass
      MYSQL_DATABASE: municipal
      MYSQL_USER: municipal_user
      MYSQL_PASSWORD: municipal_pass
    volumes:
      - mariadb_data:/var/lib/mysql
      - ./data/sql:/docker-entrypoint-initdb.d:ro
    ports:
      - "3307:3306"
    networks:
      - datalake-network

  python-client:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: python-client
    volumes:
      - ./scripts:/scripts
      - ./data:/data
    depends_on:
      - minio
      - mariadb
    networks:
      - datalake-network

  db:
    image: postgres:16
    container_name: bbdd_postgre
    environment:
      POSTGRES_DB: bbdd_postgre
      POSTGRES_USER: bbdd_postgre
      POSTGRES_PASSWORD: bbdd_postgre
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./data:/data
    networks:
      - datalake-network

  jupyter:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: jupyter-client
    ports:
      - "8888:8888"
    volumes:
      - ./scripts:/scripts
      - ./data:/data
    depends_on:
      - minio
      - mariadb
      - db
    command: >
      sh -c "pip install notebook && jupyter notebook --ip=0.0.0.0 --port=8888 --no-browser --allow-root --NotebookApp.token=''"
    networks:
      - datalake-network

  superset:
    image: apache/superset:latest
    container_name: superset
    ports:
      - "8088:8088"
    environment:
      SUPERSET_SECRET_KEY: "superset_secret"
    volumes:
      - ./superset_home:/app/superset_home
    depends_on:
      - db
    command: >
      /bin/bash -c "
        pip install psycopg2-binary &&
        superset db upgrade &&
        superset fab create-admin --username admin --firstname Admin --lastname User --email admin@superset.com --password admin &&
        superset init &&
        if [ -f /app/superset_home/dashboards/dashboard.json ]; then
          superset import-dashboards --path /app/superset_home/dashboards/dashboard.json;
        fi &&
        superset run -h 0.0.0.0 -p 8088 --with-threads --reload --debugger"
    networks:
      - datalake-network

volumes:
  minio_data:
  mariadb_data:
  postgres_data:

networks:
  datalake-network:
    external: true